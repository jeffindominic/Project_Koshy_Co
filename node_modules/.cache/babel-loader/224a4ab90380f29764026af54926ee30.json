{"ast":null,"code":"export default function validateForm(_ref) {\n  let {\n    name,\n    email,\n    password,\n    confirmPass\n  } = _ref;\n  if (!name.trim()) {\n    return 'Username required';\n  }\n  // else if (!/^[A-Za-z]+/.test(name.trim())) {\n  //   errors.name = 'Enter a valid name';\n  // }\n\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (!email) {\n    return 'Email required';\n  } else if (regex.test(email.toLocalLowerCase)) {\n    return 'Email address is invalid';\n  }\n  if (!password) {\n    return 'Password is required';\n  } else if (password.length < 6) {\n    return 'Password needs to be 6 characters or more';\n  }\n  if (!confirmPass) {\n    return 'Enter Confirm password is required';\n  } else if (confirmPass !== password) {\n    return 'Passwords do not match';\n  }\n  return null;\n}","map":{"version":3,"names":["validateForm","name","email","password","confirmPass","trim","regex","test","toLocalLowerCase","length"],"sources":["F:/Works/KOSHY-CO/koshy-and-co/src/components/Form/validateForm.js"],"sourcesContent":["export default function validateForm({ name, email, password, confirmPass }) {\n\tif (!name.trim()) {\n\t\treturn 'Username required';\n\t}\n\t// else if (!/^[A-Za-z]+/.test(name.trim())) {\n\t//   errors.name = 'Enter a valid name';\n\t// }\n\n\tconst regex =\n\t\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\tif (!email) {\n\t\treturn 'Email required';\n\t} else if (regex.test(email.toLocalLowerCase)) {\n\t\treturn 'Email address is invalid';\n\t}\n\tif (!password) {\n\t\treturn 'Password is required';\n\t} else if (password.length < 6) {\n\t\treturn 'Password needs to be 6 characters or more';\n\t}\n\n\tif (!confirmPass) {\n\t\treturn 'Enter Confirm password is required';\n\t} else if (confirmPass !== password) {\n\t\treturn 'Passwords do not match';\n\t}\n\treturn null;\n}\n"],"mappings":"AAAA,eAAe,SAASA,YAAY,OAAyC;EAAA,IAAxC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAY,CAAC;EAC1E,IAAI,CAACH,IAAI,CAACI,IAAI,EAAE,EAAE;IACjB,OAAO,mBAAmB;EAC3B;EACA;EACA;EACA;;EAEA,MAAMC,KAAK,GACV,uJAAuJ;EACxJ,IAAI,CAACJ,KAAK,EAAE;IACX,OAAO,gBAAgB;EACxB,CAAC,MAAM,IAAII,KAAK,CAACC,IAAI,CAACL,KAAK,CAACM,gBAAgB,CAAC,EAAE;IAC9C,OAAO,0BAA0B;EAClC;EACA,IAAI,CAACL,QAAQ,EAAE;IACd,OAAO,sBAAsB;EAC9B,CAAC,MAAM,IAAIA,QAAQ,CAACM,MAAM,GAAG,CAAC,EAAE;IAC/B,OAAO,2CAA2C;EACnD;EAEA,IAAI,CAACL,WAAW,EAAE;IACjB,OAAO,oCAAoC;EAC5C,CAAC,MAAM,IAAIA,WAAW,KAAKD,QAAQ,EAAE;IACpC,OAAO,wBAAwB;EAChC;EACA,OAAO,IAAI;AACZ"},"metadata":{},"sourceType":"module"}